{
    "collab_server" : "",
    "contents" : "#' Find the week number of year\n#'\n#' Takes in any date and show the week number\n#' @param month,maxdate,curdate,bpem/ month,maxdate,curdate and bpem need to be entered\n#' @return return the week number in year\n#' @export\n\n\n\nDPOWER<-function(month,maxdate,curdate,bpem)\n{\n  ##########################Manupulate the data/Change the format for Date##########################\n  bpem1<-bpem\n  bpem1$FirstAttempt<-as.Date(bpem1$FirstAttempt,\"%m/%d/%Y\")\n  bpem1$UploadDate<-as.Date(bpem1$UploadDate,\"%m/%d/%Y\")\n  bpem1$DateTime<-as.Date(bpem1$DateTime,\"%m/%d/%Y\")\n  bpem1$SchedBD<-as.Date(bpem1$SchedBD,\"%m/%d/%Y\")\n  bpem1$CreationDate<-as.Date(bpem1$CreationDate,\"%m/%d/%Y\")\n\n\n  ############################Filter the Require Data########################\n  bpem1<-bpem1[!(is.na(bpem1$CaseID) | bpem1$CaseID==\"\"), ]\n  str(bpem1)\n  bpem2<-bpem1[format(bpem1$CreationDate,'%m')==month,1:17]\n  bpem3<-bpem2[bpem2$CreationDate<=maxdate,1:17]\n\n  # rm(bpem)\n  # rm(bpem1)\n  # rm(bpem2)\n\n  ######################Data Processing######################################\n  bpem3$Action_Date<-bpem3$DateTime\n  bpem3$Action_Date1<-bpem3$DateTime\n\n\n  #########################Find the week number##############################\n  my_week <- function(x){\n    # fst monday of the same year\n    first_sun <- as.POSIXct(paste0(year(x),\"-01-Mon\"), format = \"%Y-%U-%a\")\n    (yday(x) + (7 - yday(first_sun) )) %/% 7+1\n  }\n\n  bpem3$Week_Num<-my_week(bpem3$CreationDate)\n  bpem3$Month_Count<-format(bpem3$CreationDate,'%m')\n  #############################Check the condition##########################\n\n  bpem3$Exception_Impact<-toupper(bpem3$Exception.Impact)\n\n  bpem3$Impact_Hierarchy_Order<-\n    with(bpem3, ifelse(bpem3$Exception_Impact==\"STOPS REGISTRATION\",bpem3$Impact_Hierarchy_Order<-1,\n                       ifelse(bpem3$Exception_Impact==\"REGULATORY\",bpem3$Impact_Hierarchy_Order<-2,\n                              ifelse(bpem3$Exception_Impact==\"CUSTOMER SAFETY\",bpem3$Impact_Hierarchy_Order<-3,\n                                     ifelse(bpem3$Exception_Impact==\"STOPS BILLING\",bpem3$Impact_Hierarchy_Order<-4,\n                                            ifelse(bpem3$Exception_Impact==\"INCORRECT BILLING\",bpem3$Impact_Hierarchy_Order<-5,\n                                                   ifelse(bpem3$Exception_Impact==\"INDUSTRY UPDATE\",bpem3$Impact_Hierarchy_Order<-6,7)))))))\n  bpem3$Action_Date<-\n    as.Date( with(bpem3,\n                  ifelse(bpem3$Exception_Impact==\"STOPS REGISTRATION\",bpem3$FirstAttempt,bpem3$Action_Date)),origin=\"1970-01-01\")\n\n  bpem3$Exception_Impact<-\n    with(bpem3,ifelse(bpem3$Exception_Impact==\"STOPS BILLING\",\"STOPS BILLING-(BPEM)\",Exception_Impact))\n\n  ############################BGB_Exception_View_1########################\n\n  BGB_Exception_View_1<-bpem3\n  BGB_Exception_View_1$Process_Name<-bpem3$Process;\n\n\n  BGB_Exception_View_1$Process_Name_New<-\n    with(BGB_Exception_View_1,\n         ifelse(toupper(BGB_Exception_View_1$Process_Name)==\"OBJECTION\",\"Switch-Objection\",\n                ifelse(toupper(BGB_Exception_View_1$Process_Name)==\"REJECTION\",\"Switch-Rejection\",\n                       ifelse(toupper(BGB_Exception_View_1$Process_Name)==\"FIRST BILL\",\"Switch-First_Bill\",\n                              ifelse(toupper(BGB_Exception_View_1$Process_Name)==\"FINAL BILL\",\"Switch-Final_Bill\",\n                                     ifelse(toupper(BGB_Exception_View_1$Process_Name)==\"DEVICE\",\"Device\",\n                                            ifelse(toupper(BGB_Exception_View_1$Process_Name)==\"EIDE\",\"IDE\",\n\n                                                   ifelse((toupper(BGB_Exception_View_1$Process_Name)==\"READS\") & (toupper(BGB_Exception_View_1$Exception)==\"IMR\"),\"Read-IMR\",\n                                                          ifelse((toupper(BGB_Exception_View_1$Process_Name)==\"READS\") & (toupper(BGB_Exception_View_1$Exception)==\"M100\"),\"Read-IMR\",\n                                                                 ifelse((toupper(BGB_Exception_View_1$Process_Name)==\"READS\") & (toupper(BGB_Exception_View_1$Exception)==\"M101\"),\"Read-IMR\",\n                                                                        ifelse((toupper(BGB_Exception_View_1$Process_Name)==\"READS\") & (toupper(BGB_Exception_View_1$Exception)==\"M102\"),\"Read-IMR\",\n                                                                               ifelse((toupper(BGB_Exception_View_1$Process_Name)==\"READS\") & (toupper(BGB_Exception_View_1$Exception)==\"M103\"),\"Read-IMR\",\n\n                                                                                      ifelse((toupper(BGB_Exception_View_1$Process_Name)==\"READS\") & (toupper(BGB_Exception_View_1$Exception)!=\"IMR\"),\"Reads Non-IMR\",\n                                                                                             ifelse((toupper(BGB_Exception_View_1$Process_Name)==\"READS\") & (toupper(BGB_Exception_View_1$Exception)!=\"M100\"),\"Reads Non-IMR\",\n                                                                                                    ifelse((toupper(BGB_Exception_View_1$Process_Name)==\"READS\") & (toupper(BGB_Exception_View_1$Exception)!=\"M101\"),\"Reads Non-IMR\",\n                                                                                                           ifelse((toupper(BGB_Exception_View_1$Process_Name)==\"READS\") & (toupper(BGB_Exception_View_1$Exception)!=\"M102\"),\"Reads Non-IMR\",\n                                                                                                                  ifelse((toupper(BGB_Exception_View_1$Process_Name)==\"READS\") & (toupper(BGB_Exception_View_1$Exception)!=\"M103\"),\"Reads Non-IMR\",\n\n                                                                                                                         ifelse((toupper(BGB_Exception_View_1$Process_Name)==\"BILLING\") & (toupper(BGB_Exception_View_1$Exception)=='OUTSORT'),\"Outsort\",\n                                                                                                                                ifelse((toupper(BGB_Exception_View_1$Process_Name)==\"BILLING\") & (toupper(BGB_Exception_View_1$Exception)=='B100'),\"Outsort\",\n\n                                                                                                                                       ifelse((toupper(BGB_Exception_View_1$Process_Name)==\"BILLING\") & (toupper(BGB_Exception_View_1$Exception)!='OUTSORT'),\"BPEM\",\n                                                                                                                                              ifelse((toupper(BGB_Exception_View_1$Process_Name)==\"BILLING\") & (toupper(BGB_Exception_View_1$Exception)!='B100'),\"BPEM\",\"\"\n                                                                                                                                              )))))))))))))))))))))\n\n  # rm(bpem3)\n  ###########################################BGB_Exception_View_2############################################\n\n  BGB_Exception_View_2<-arrange(BGB_Exception_View_1,desc(Process_Name_New))\n\n  BGB_Exception_View_2$Customer_Metric<-\n    with(BGB_Exception_View_2,\n         ifelse(BGB_Exception_View_2$Exception_Impact==\"STOPS REGISTRATION\",BGB_Exception_View_2$Customer_Metric<-\"24 hours SLA\",\n                ifelse(BGB_Exception_View_2$Exception_Impact==\"REGULATORY\",BGB_Exception_View_2$Customer_Metric<-\"24 hours SLA\",\n                       ifelse(BGB_Exception_View_2$Exception_Impact==\"CUSTOMER SAFETY\",BGB_Exception_View_2$Customer_Metric<-\"24 hours SLA\",\n                              ifelse(BGB_Exception_View_2$Exception_Impact==\"STOPS BILLING-(BPEM)\",BGB_Exception_View_2$Customer_Metric<-\"Bill Date\",\n                                     ifelse(BGB_Exception_View_2$Exception_Impact==\"INCORRECT BILLING\",BGB_Exception_View_2$Customer_Metric<-\"Bill Date\",\n                                            ifelse(BGB_Exception_View_2$Exception_Impact==\"INDUSTRY UPDATE\",BGB_Exception_View_2$Customer_Metric<-\"Bill Date\",\n                                                   ifelse(BGB_Exception_View_2$Exception_Impact==\"IMBALANCE\",BGB_Exception_View_2$Customer_Metric<-\"Bill Date\",\"Bill Date\"\n                                                   ))))))))\n\n  # rm(BGB_Exception_View_1)\n  #########################################BGB_Exception_View_3###################################################\n  BGB_Exception_View_3<-BGB_Exception_View_2\n\n  BGB_Exception_View_3$Customer_Metric<-\n    with(BGB_Exception_View_3,\n         ifelse(((BGB_Exception_View_3$Process_Name_New==\"Read-IMR\") & (BGB_Exception_View_3$Exception_Impact==\"STOPS BILLING-(BPEM)\")),\"Extraction Date +5Days\",\n                ifelse(((BGB_Exception_View_3$Process_Name_New==\"Outsort\") & (BGB_Exception_View_3$Exception_Impact==\"STOPS BILLING-(BPEM)\")),\"Extraction Date +5Days\",BGB_Exception_View_3$Customer_Metric\n                )))\n\n\n  BGB_Exception_View_3$Exception_Impact<-\n    with(BGB_Exception_View_3,\n         ifelse(((BGB_Exception_View_3$Process_Name_New==\"Read-IMR\") & (BGB_Exception_View_3$Exception_Impact==\"STOPS BILLING-(BPEM)\")),\"STOP BILLING-(Read-IMR)\",\n                ifelse(((BGB_Exception_View_3$Process_Name_New==\"Outsort\") & (BGB_Exception_View_3$Exception_Impact==\"STOPS BILLING-(BPEM)\")),\"STOP BILLING-(Outsort)\",BGB_Exception_View_3$Exception_Impact\n                )))\n\n  BGB_Exception_View_3$Past_Sched=BGB_Exception_View_3$SchedBD-BGB_Exception_View_3$CreationDate;\n\n  BGB_Exception_View_3$Past_Sched<-as.numeric(BGB_Exception_View_3$Past_Sched,\"days\")\n\n  BGB_Exception_View_3$Customer_Metric<-\n    with(BGB_Exception_View_3,\n         ifelse(((BGB_Exception_View_3$Customer_Metric==\"Bill Date\") & (BGB_Exception_View_3$Past_Sched<0)),\"Bill Date Non-Aligned\",\n                ifelse(((BGB_Exception_View_3$Customer_Metric==\"Bill Date\") & (BGB_Exception_View_3$Past_Sched>=0)),\"Bill Date Aligned\",BGB_Exception_View_3$Customer_Metric\n                )))\n  # rm(BGB_Exception_View_2)\n  ################################################BGB_Exception_View_4###########################################\n  BGB_Exception_View_4<-BGB_Exception_View_3\n  BGB_Exception_View_4$New_CreationDate<-BGB_Exception_View_4$CreationDate;\n  BGB_Exception_View_4$week_day<-wday(BGB_Exception_View_4$CreationDate)\n\n  BGB_Exception_View_4$New_CreationDate<-\n    as.Date(with(BGB_Exception_View_4,\n                 ifelse(BGB_Exception_View_4$week_day==1,BGB_Exception_View_4$CreationDate+1,\n                        ifelse(BGB_Exception_View_4$week_day==7,BGB_Exception_View_4$CreationDate+2,BGB_Exception_View_4$CreationDate\n                        ))),,origin=\"1970-01-01\")\n  # rm(BGB_Exception_View_3)\n\n  #####################Adding 5 days in all where SLA is Bill Date###################################\n\n  Add_Workday<-function(Date_to_add,Days_wanted_to_Add)\n  {\n    Date_to_add<-as.Date(ifelse((wday(Date_to_add)==1),Date_to_add+1,\n                                ifelse((wday(Date_to_add)==7),Date_to_add+2,Date_to_add\n                                )),origin=\"1970-01-01\")\n    cal <- Calendar(weekdays=c('saturday', 'sunday'))\n    bizdays::offset(Date_to_add,Days_wanted_to_Add , cal)\n  }\n\n  BGB_Exception_View_4$New_SchedBD<-BGB_Exception_View_4$SchedBD;\n\n  BGB_Exception_View_4$New_SchedBD<-\n    as.Date(with(BGB_Exception_View_4,\n                 ifelse(\n                   (toupper(Exception_Impact)==\"STOPS BILLING\") |\n                     (toupper(Exception_Impact)==\"STOP BILLING-(READ-IMR)\") |\n                     (toupper(Exception_Impact)==\"STOP BILLING-(OUTSORT)\") |\n                     (toupper(Exception_Impact)==\"STOPS BILLING-(BPEM)\") |\n                     (toupper(Exception_Impact)==\"IMBALANCE\") |\n                     (toupper(Exception_Impact)==\"INCORRECT BILLING\") |\n                     (toupper(Exception_Impact)==\"INDUSTRY UPDATE\"),\n                   Add_Workday(BGB_Exception_View_4$SchedBD,5),BGB_Exception_View_4$SchedBD\n                 )),origin=\"1970-01-01\")\n\n  BGB_Exception_View_4$New_SchedBD<-\n    as.Date( with(BGB_Exception_View_4,\n                  ifelse(\n                    (wday(BGB_Exception_View_4$New_SchedBD))==1,(BGB_Exception_View_4$New_SchedBD+1),\n                    ifelse(\n                      (wday(BGB_Exception_View_4$New_SchedBD))==7,(BGB_Exception_View_4$New_SchedBD+2),\n                      BGB_Exception_View_4$New_SchedBD\n                    ))),origin=\"1970-01-01\")\n  ####################################BGB_Exception_View_5####################################################\n\n  BGB_Exception_View_5<-BGB_Exception_View_4\n\n  BGB_Exception_View_5$New_SchedBD<-\n    as.Date(with(BGB_Exception_View_5,\n                 ifelse(\n                   (toupper(Exception_Impact)==\"STOPS REGISTRATION\") |\n                     (toupper(Exception_Impact)==\"REGULATORY\") |\n                     (toupper(Exception_Impact)==\"CUSTOMER SAFETY\"),\n\n                   Add_Workday(BGB_Exception_View_5$New_CreationDate,2),BGB_Exception_View_5$New_SchedBD\n                 )),origin=\"1970-01-01\")\n  # rm(BGB_Exception_View_4)\n  ##############################################BGB_Exception_View_6#######################################\n\n  BGB_Exception_View_6<-BGB_Exception_View_5\n  BGB_Exception_View_6$Process_Day_Difference=BGB_Exception_View_6$New_SchedBD-BGB_Exception_View_6$Action_Date;\n\n  #####################################Find out the week in month#############################################\n\n  week_of_month<-function(Put_The_Date)\n  {\n    # Put_The_Date=as.Date(\"2017/01/07\")\n    week(Put_The_Date)\n    First_Day_Month<-cut(Put_The_Date,\"month\")\n    First_Day_Month\n    Week_First_Day_Month<-my_week(First_Day_Month)\n    Week_First_Day_Month\n\n    Week_Assign_Date<-my_week(Put_The_Date)\n    Week_Assign_Date\n\n    Week_in_the_Month<- (Week_Assign_Date-Week_First_Day_Month) +1\n  }\n\n  # week_of_month(as.Date(\"2017/01/02\"))\n\n\n  ############################################################################################################\n  BGB_Exception_View_6$Week_Number<-week_of_month(BGB_Exception_View_6$CreationDate)\n\n  BGB_Exception_View_6$Week<-\n    with(BGB_Exception_View_6,\n         ifelse(BGB_Exception_View_6$Week_Number==1,\"1st Week of Month\",\n                ifelse(BGB_Exception_View_6$Week_Number==2,\"2nd Week of Month\",\n                       ifelse(BGB_Exception_View_6$Week_Number==3,\"3rd Week of Month\",\n                              ifelse(BGB_Exception_View_6$Week_Number==4,\"4th Week of Month\",\n                                     ifelse(BGB_Exception_View_6$Week_Number==5,\"5th Week of Month\",\n                                            ifelse(BGB_Exception_View_6$Week_Number==6,\"6th Week of Month\",\"Check the date format for CreationDate\"\n                                            )))))))\n\n  BGB_Exception_View_6$unique_key<-gsub(\"[[:space:]]\", \"\",paste(BGB_Exception_View_6$InstallationNo,BGB_Exception_View_6$Month_Count,BGB_Exception_View_6$Impact_Hierarchy_Order))\n  BGB_Exception_View_6$unique_key_installation<-gsub(\"[[:space:]]\", \"\",paste(BGB_Exception_View_6$InstallationNo,BGB_Exception_View_6$Month_Count))\n  # rm(BGB_Exception_View_5)\n  ##########################################BGB_Exception_View_7############################################\n\n  BGB_Exception_View_7<-BGB_Exception_View_6\n  BGB_Exception_View_7$CreationDate_1<-format(BGB_Exception_View_7$CreationDate,'%d-%B-%Y')\n  # rm(BGB_Exception_View_6)\n  ############################BGB_Exception_View_8########################\n\n  BGB_Exception_View_8<-BGB_Exception_View_7\n\n  BGB_Exception_View_8$Compelation_Status<-\n    with(BGB_Exception_View_8,\n         ifelse(BGB_Exception_View_8$TerminationName==\"Completed\",\"Completed\",\n                ifelse(BGB_Exception_View_8$TerminationName==\"Already Completed\",\"Completed\",\"Outstanding\"\n                )))\n\n  BGB_Exception_View_8$Compelation_Status<-\n    with(BGB_Exception_View_8,\n         ifelse(((toupper(BGB_Exception_View_8$Exception_Impact)==\"STOPS REGISTRATION\") & (BGB_Exception_View_8$TerminationName == \"Pending\")),\n                \"Completed\",BGB_Exception_View_8$Compelation_Status\n         ))\n\n  BGB_Exception_View_8$SLA_Status<-\n    with(BGB_Exception_View_8,\n         ifelse(\n           (BGB_Exception_View_8$Compelation_Status==\"Completed\")& (BGB_Exception_View_8$Process_Day_Difference>=0),\"Completed_Within_SLA\",\n           ifelse((BGB_Exception_View_8$Compelation_Status==\"Completed\") & (BGB_Exception_View_8$Process_Day_Difference<0),\"Completed_Outside_SLA\",\n                  ifelse((BGB_Exception_View_8$Compelation_Status==\"Outstanding\") & (BGB_Exception_View_8$New_SchedBD>curdate),\"Outstanding_Within_SLA\",\n                         ifelse((BGB_Exception_View_8$Compelation_Status==\"Outstanding\") & (BGB_Exception_View_8$New_SchedBD<=curdate),\"Outstanding_Outside_SLA\",\"NA\"\n                         )))))\n\n  BGB_Exception_View_8$SLA_Status_Final<-\n    with(BGB_Exception_View_8,\n         ifelse(\n           (BGB_Exception_View_8$Compelation_Status==\"Completed\")& (BGB_Exception_View_8$Process_Day_Difference>=0),\"Within_SLA\",\n           ifelse((BGB_Exception_View_8$Compelation_Status==\"Completed\") & (BGB_Exception_View_8$Process_Day_Difference<0),\"Outside_SLA\",\n                  ifelse((BGB_Exception_View_8$Compelation_Status==\"Outstanding\") & (BGB_Exception_View_8$New_SchedBD>curdate),\"Within_SLA\",\n                         ifelse((BGB_Exception_View_8$Compelation_Status==\"Outstanding\") & (BGB_Exception_View_8$New_SchedBD<=curdate),\"Outside_SLA\",\"NA\"\n                         )))))\n\n  # rm(BGB_Exception_View_7)\n  ##############################################BGB_Exception_View_9#############################################\n  BGB_Exception_View_9<-BGB_Exception_View_8\n\n\n  BGB_Exception_View_9$Pending<-0;\n  BGB_Exception_View_9$Unattempted<-0;\n\n  BGB_Exception_View_9$Pending<-\n    with(BGB_Exception_View_9,\n         ifelse((BGB_Exception_View_9$TerminationName==\"Pending\"),1,\n                ifelse((BGB_Exception_View_9$TerminationName==\"Voice Call Required Customer\"),1,\n                       ifelse((BGB_Exception_View_9$TerminationName==\"Voice Call Required -3rd Party/Industry\"),1,BGB_Exception_View_9$Pending\n                       ))))\n\n  BGB_Exception_View_9$Pend_Status<-\n    with(BGB_Exception_View_9,\n         ifelse((BGB_Exception_View_9$TerminationName==\"Pending\"),\"Pending\",\n                ifelse((BGB_Exception_View_9$TerminationName==\"Voice Call Required Customer\"),\"Pending\",\n                       ifelse((BGB_Exception_View_9$TerminationName==\"Voice Call Required -3rd Party/Industry\"),\"Pending\",\n                              ifelse((BGB_Exception_View_9$TerminationName==\"Unattempted\"),\"Unattempted\",\"\"\n                              )))))\n\n  BGB_Exception_View_9$Unattempted<-\n    with(BGB_Exception_View_9,\n         ifelse((BGB_Exception_View_9$TerminationName==\"Unattempted\"),1,BGB_Exception_View_9$Unattempted\n         ))\n  # rm(BGB_Exception_View_8)\n  ######################################BGB_Exception_View_10############################################\n\n  BGB_Exception_View_10<-BGB_Exception_View_9\n\n  BGB_Exception_View_10$Completed_Within_SLA=0;\n  BGB_Exception_View_10$Completed_Outside_SLA=0;\n  BGB_Exception_View_10$Outstanding_Within_SLA=0;\n  BGB_Exception_View_10$Outstanding_Outside_SLA=0;\n  BGB_Exception_View_10$Recieved=1;\n\n  BGB_Exception_View_10$Completed_Within_SLA<-\n    ifelse((BGB_Exception_View_10$SLA_Status==\"Completed_Within_SLA\" ),1,BGB_Exception_View_10$Completed_Within_SLA)\n  BGB_Exception_View_10$Completed_Outside_SLA<-\n    ifelse((BGB_Exception_View_10$SLA_Status==\"Completed_Outside_SLA\" ),1,BGB_Exception_View_10$Completed_Outside_SLA)\n  BGB_Exception_View_10$Outstanding_Within_SLA<-\n    ifelse((BGB_Exception_View_10$SLA_Status==\"Outstanding_Within_SLA\" ),1,BGB_Exception_View_10$Outstanding_Within_SLA)\n  BGB_Exception_View_10$Outstanding_Outside_SLA<-\n    ifelse((BGB_Exception_View_10$SLA_Status==\"Outstanding_Outside_SLA\" ),1,BGB_Exception_View_10$Outstanding_Outside_SLA)\n  # rm(BGB_Exception_View_9)\n  ################################################BGB_Exception_View_11##########################################\n\n  BGB_Exception_View_11<-BGB_Exception_View_10\n  BGB_Exception_View_11<-subset(BGB_Exception_View_11,BGB_Exception_View_11$TerminationName!=\"Data Cleansing Slingshot 3B\",1:47)\n\n  BGB_Exception_View_12<-data.table(BGB_Exception_View_11)\n\n  BGB_Exception_View_12$First<-\n    with(BGB_Exception_View_12,\n         ifelse(duplicated(BGB_Exception_View_12$InstallationNo),0,1))\n  # rm(BGB_Exception_View_10)\n  # rm(BGB_Exception_View_11)\n\n  #########################################Working####################\n  BGB_Installation_View<-BGB_Exception_View_12\n\n  BGB_Installation_View$Action_Date_Final<-BGB_Installation_View$Action_Date1\n  BGB_Installation_View$First_Attempt_Final<-BGB_Installation_View$FirstAttempt\n  BGB_Installation_View$Creation_Date_Final<-BGB_Installation_View$CreationDate\n  BGB_Installation_View$Schedule_Bill_Date<-BGB_Installation_View$SchedBD\n  BGB_Installation_View$Upload_date_New<-BGB_Installation_View$UploadDate\n  BGB_Installation_View$New_Schedule_Bill_date<-BGB_Installation_View$New_SchedBD\n\n  write.csv(BGB_Installation_View,file=\"d:/BGB_Installation_View.csv\")\n\n  BGB_Installation_View_Final<-\n    subset(\n      BGB_Installation_View,\n      select=c(\"Action_Date_Final\",\n               \"First_Attempt_Final\",\n               \"Creation_Date_Final\",\n               \"Schedule_Bill_Date\",\n               \"New_Schedule_Bill_date\",\n               \"Customer_Metric\",\n               \"Week_Number\",\n               \"Impact_Hierarchy_Order\",\n               \"Exception_Impact\",\n               \"TerminationName\",\n               \"CaseID\",\n               \"InstallationNo\",\n               \"Exception\",\n               \"Process\",\n               \"Segment\",\n               \"Collective\",\n               \"Process_Name\",\n               \"Process_Name_New\",\n               \"Past_Sched\",\n               \"week_day\",\n               \"Week\",\n               \"Compelation_Status\",\n               \"SLA_Status\",\n               \"SLA_Status_Final\",\n               \"Pending\",\n               \"Unattempted\",\n               \"Pend_Status\",\n               \"Completed_Within_SLA\",\n               \"Completed_Outside_SLA\",\n               \"Outstanding_Within_SLA\",\n               \"Outstanding_Outside_SLA\",\n               \"Recieved\",\n               \"UserName\",\n               \"SupervisorName\",\n               \"ManagerName\",\n               \"Upload_date_New\",\n               \"First\",\n               \"Month_Count\"\n      ))\n\n  #View(BGB_Installation_View_Final)\n  write.csv(BGB_Installation_View_Final,file=\"d:/BGB_Installation_View_Final.csv\")\n\n\n}\n",
    "created" : 1485949172831.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3943343784",
    "id" : "4843F466",
    "lastKnownWriteTime" : 1485953335,
    "last_content_update" : -2147483648,
    "path" : "C:/Users/deepankar76967/Desktop/Current Project/BGB R Project/Package 1.0/DPOWER.1/R/DPOWER.r",
    "project_path" : "R/DPOWER.r",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}